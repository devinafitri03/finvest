plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'apap.tk'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'mysql:mysql-connector-java:5.1.6'
	implementation 'org.springframework.boot:spring-boot-starter-validation:2.7.3'
	compileOnly("org.projectlombok:lombok:1.18.24")
	annotationProcessor('org.projectlombok:lombok:1.18.24')
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.projectlombok:lombok:1.18.22'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:3.0.1' // or any compatible version
    implementation 'org.glassfish.jaxb:jaxb-runtime:3.0.1' // or any compatible version
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-parameters'
}

tasks.named('test') {
	useJUnitPlatform()
}

