package apap.tk.finvest.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import java.util.Optional;
import apap.tk.finvest.model.FinanceReportModel;
import apap.tk.finvest.repository.FinanceReportDb;
import jakarta.persistence.Transient;
import jakarta.transaction.Transactional;

@Service
@Transactional
public class FinanceReportServiceImpl implements FinanceReportService {

    @Autowired
    FinanceReportDb financeReportDb;

    // TODO: count investor when the repository and model done
    @Override
    public void addItem(FinanceReportModel financeReportModel) {
        financeReportDb.save(financeReportModel);
    }

    // generated by Gemini AI
    @Override
    public void updateItem(FinanceReportModel financeReportModel) {
        financeReportDb.save(financeReportModel);
    }

    @Override
    public FinanceReportModel deleteItem(FinanceReportModel financeReportModel) {
        financeReportDb.deleteById(financeReportModel.getProyek());
        return financeReportModel;
    }

    @Transient
    public Integer getNetProfit(FinanceReportModel financeReportModel) {
        if (financeReportModel.getJumlah_investor() == null || financeReportModel.getJumlah_investor() == 0) {
            return 0;
        }
        return financeReportModel.getNet_profit() / (financeReportModel.getJumlah_investor() + 1);

    }

    @Override
    public List<FinanceReportModel> getListFinanceReport() {
        return financeReportDb.findAll();
    }

    @Override
    public FinanceReportModel getProyekById(Integer proyekId) {
        Optional<FinanceReportModel> proyek = financeReportDb.findById(proyekId);
        if (proyek.isPresent()) {
            return proyek.get();
        } else {
            return null;
        }
    }
}
